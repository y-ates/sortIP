/*
 * Sorts IP adresses, given by file.
 *   
 * Copyright (C) 2017 Yakup Ates <Yakup.Ates@rub.de>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef SORT_IP_H
#define SORT_IP_H

#define sortIP_VERSION_MAJOR @sortIP_VERSION_MAJOR@
#define sortIP_VERSION_MINOR @sortIP_VERSION_MINOR@

#define PREFIX "_sorted"

#include <sys/stat.h>
#include <arpa/inet.h>
#include <iostream>
#include <fstream>
#include <sstream>
#include <vector>
#include <string>
#include <iterator>
#include <algorithm>

class sortIP {
 private:
	std::string file_path;
	std::string output_filename;
	std::vector<std::string> vector_from_file;
 public:
	sortIP();
	sortIP(const std::string& path);
	~sortIP();

	std::vector<std::string> splitString(const std::string& input, const char& split_character) const;
	inline bool set_file(const std::string& path);
	inline bool file_exists(const std::string& file_path) const;
	bool file_to_vector();
	bool vector_to_file();
	bool sortIPs();

};

#endif
